/*
	This script file is part of the Sonic 3 A.I.R. script software distribution.
	Copyright (C) 2017-2022 by Eukaryot

	Published under the GNU GPLv3 open source software license, see license.txt
	or https://www.gnu.org/licenses/gpl-3.0.en.html
*/



//-------------------------------------------------------//
// C++ bindings that got removed or renamed              //
//-------------------------------------------------------//

function void Renderer.drawVdpSpriteWithTint(s16 px, s16 py, u8 encodedSize, u16 patternIndex, u16 renderQueue, u32 tintColor, u32 addedColor)
{
	// Convert colors from 0xAABBGGRR to 0xRRGGBBAA
	tintColor = convertColors32(tintColor)
	addedColor = convertColors32(addedColor)
	Renderer.drawVdpSpriteTinted(px, py, encodedSize, patternIndex, renderQueue, tintColor, addedColor)
}

function void Renderer.drawCustomSprite(u64 key, s16 px, s16 py, u8 atex, u8 flags, u16 renderQueue, u8 angle, u32 tintColor, s32 scale)
{
	// Convert color from 0xAABBGGRR to 0xRRGGBBAA
	tintColor = convertColors32(tintColor)
	Renderer.drawCustomSpriteTinted(key, px, py, atex, flags, renderQueue, angle, tintColor, scale)
}

function void Renderer.drawCustomSpriteWithTransform(u64 key, s16 px, s16 py, u8 atex, u8 flags, u16 renderQueue, u32 tintColor, s32 transform11, s32 transform12, s32 transform21, s32 transform22)
{
	// Convert color from 0xAABBGGRR to 0xRRGGBBAA
	tintColor = convertColors32(tintColor)
	Renderer.drawCustomSpriteTransformed(key, px, py, atex, flags, renderQueue, tintColor, transform11, transform12, transform21, transform22)
}

function void debugDrawRect(s32 px, s32 py, s32 width, s32 height)
{
	Debug.drawRect(px, py, width, height)
}

function void debugDrawRect(s32 px, s32 py, s32 width, s32 height, u32 color)
{
	// Convert color from 0xAABBGGRR to 0xRRGGBBAA
	color = convertColors32(color)
	Debug.drawRect(px, py, width, height, color)
}



//-------------------------------------------------------//
// Functions that got proper names                       //
//-------------------------------------------------------//

function void fn00f76e()
{
	CheckHitboxCollisionDownwards()
}

function void fn00faf2()
{
	CheckHitboxCollisionUpwards()
}

function void fn011fd6()
{
	Character.CheckFloorCollision()
}

function void fn011fee()
{
	Character.CheckCeilingCollision()
}

function void fn00f3a4()
{
	CheckStaticCollisionVerticalShort()
}
